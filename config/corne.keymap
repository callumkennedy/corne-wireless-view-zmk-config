/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        gui: gui {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&to 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp F    &kp P           &kp B           &kp J      &kp L        &kp U          &kp Y    &kp SEMICOLON  &kp MINUS
&kp LEFT_SHIFT  &kp A  &kp R  &kp S    &kp T           &kp G           &kp M      &kp N        &kp E          &kp I    &kp O          &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C    &kp D           &kp V           &kp K      &kp H        &kp COMMA      &kp DOT  &kp FSLH       &gui
                              &kp DEL  &kp LEFT_SHIFT  &kp LEFT_ALT    &lt 2 RET  &lt 1 SPACE  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&to 0        &trans  &kp HOME        &kp UP_ARROW  &kp END        &trans         &kp ESCAPE  &kp N7        &kp N8  &kp N9        &kp PLUS         &kp KP_MINUS
&bootloader  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT      &kp K_COPY     &kp N0      &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp KP_MULTIPLY  &kp KP_DIVIDE
&trans       &trans  &kp LC(LEFT)    &trans        &kp LC(RIGHT)  &kp K_PASTE    &trans      &kp N1        &kp N2  &kp N3        &kp KP_DOT       &kp EQUAL
                                     &trans        &trans         &trans         &trans      &trans        &to 0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&to 0   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS              &kp KP_MULTIPLY  &kp LPAR               &kp RPAR      &bt BT_CLR
&trans  &trans    &trans    &trans    &trans    &trans       &trans     &kp LEFT_PARENTHESIS  &trans           &kp RIGHT_PARENTHESIS  &bt BT_SEL 2  &bt BT_SEL 0
&trans  &trans    &kp HOME  &trans    &kp END   &trans       &trans     &kp LEFT_BRACKET      &trans           &kp RIGHT_BRACKET      &bt BT_SEL 3  &bt BT_SEL 1
                            &kp LGUI  &trans    &kp SPACE    &kp RET    &trans                &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};
